/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'unplugin-vue-router/types'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    'root': RouteRecordInfo<'root', '/', Record<never, never>, Record<never, never>>,
    '$error': RouteRecordInfo<'$error', '/:error(.*)', { error: ParamValue<true> }, { error: ParamValue<false> }>,
    'assessment-category': RouteRecordInfo<'assessment-category', '/assessment/category', Record<never, never>, Record<never, never>>,
    'assessment-category-id': RouteRecordInfo<'assessment-category-id', '/assessment/category/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'assessment-category(component)question-dialog': RouteRecordInfo<'assessment-category(component)question-dialog', '/assessment/category/(component)/QuestionDialog', Record<never, never>, Record<never, never>>,
    'assessment-survey': RouteRecordInfo<'assessment-survey', '/assessment/survey', Record<never, never>, Record<never, never>>,
    'assessment-survey-id': RouteRecordInfo<'assessment-survey-id', '/assessment/survey/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'assessment-survey-create': RouteRecordInfo<'assessment-survey-create', '/assessment/survey/create', Record<never, never>, Record<never, never>>,
    'dashboard-id': RouteRecordInfo<'dashboard-id', '/dashboard/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'edit-dashboard': RouteRecordInfo<'edit-dashboard', '/edit-dashboard', Record<never, never>, Record<never, never>>,
    'edit-dashboard(components)dashboard-action-options': RouteRecordInfo<'edit-dashboard(components)dashboard-action-options', '/edit-dashboard/(components)/DashboardActionOptions', Record<never, never>, Record<never, never>>,
    'edit-dashboard(components)manage-menu': RouteRecordInfo<'edit-dashboard(components)manage-menu', '/edit-dashboard/(components)/ManageMenu', Record<never, never>, Record<never, never>>,
    'edit-dashboard(components)manage-widgets': RouteRecordInfo<'edit-dashboard(components)manage-widgets', '/edit-dashboard/(components)/ManageWidgets', Record<never, never>, Record<never, never>>,
    'edit-dashboard(components)widget-action-options': RouteRecordInfo<'edit-dashboard(components)widget-action-options', '/edit-dashboard/(components)/WidgetActionOptions', Record<never, never>, Record<never, never>>,
    'log': RouteRecordInfo<'log', '/log', Record<never, never>, Record<never, never>>,
    'login': RouteRecordInfo<'login', '/login', Record<never, never>, Record<never, never>>,
    'mission': RouteRecordInfo<'mission', '/mission', Record<never, never>, Record<never, never>>,
    'patronage-mission': RouteRecordInfo<'patronage-mission', '/patronage/mission', Record<never, never>, Record<never, never>>,
    'patronage-mission-id': RouteRecordInfo<'patronage-mission-id', '/patronage/mission/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'patronage-mission(component)challenge': RouteRecordInfo<'patronage-mission(component)challenge', '/patronage/mission/(component)/challenge', Record<never, never>, Record<never, never>>,
    'patronage-mission(component)conclusion': RouteRecordInfo<'patronage-mission(component)conclusion', '/patronage/mission/(component)/conclusion', Record<never, never>, Record<never, never>>,
    'patronage-mission(component)detail': RouteRecordInfo<'patronage-mission(component)detail', '/patronage/mission/(component)/detail', Record<never, never>, Record<never, never>>,
    'patronage-mission(component)participant': RouteRecordInfo<'patronage-mission(component)participant', '/patronage/mission/(component)/participant', Record<never, never>, Record<never, never>>,
    'patronage-mission(component)progress': RouteRecordInfo<'patronage-mission(component)progress', '/patronage/mission/(component)/progress', Record<never, never>, Record<never, never>>,
    'patronage-mission-create': RouteRecordInfo<'patronage-mission-create', '/patronage/mission/create', Record<never, never>, Record<never, never>>,
    'patronage-participant': RouteRecordInfo<'patronage-participant', '/patronage/participant', Record<never, never>, Record<never, never>>,
    'patronage-participant-id': RouteRecordInfo<'patronage-participant-id', '/patronage/participant/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'patronage-participant(component)about': RouteRecordInfo<'patronage-participant(component)about', '/patronage/participant/(component)/about', Record<never, never>, Record<never, never>>,
    'patronage-participant(component)mission-table': RouteRecordInfo<'patronage-participant(component)mission-table', '/patronage/participant/(component)/mission-table', Record<never, never>, Record<never, never>>,
    'patronage-school': RouteRecordInfo<'patronage-school', '/patronage/school', Record<never, never>, Record<never, never>>,
    'patronage-school-id': RouteRecordInfo<'patronage-school-id', '/patronage/school/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'patronage-step': RouteRecordInfo<'patronage-step', '/patronage/step', Record<never, never>, Record<never, never>>,
    'progress-report': RouteRecordInfo<'progress-report', '/progress-report', Record<never, never>, Record<never, never>>,
    'school': RouteRecordInfo<'school', '/school', Record<never, never>, Record<never, never>>,
    'user': RouteRecordInfo<'user', '/user', Record<never, never>, Record<never, never>>,
    'user(components)position-table': RouteRecordInfo<'user(components)position-table', '/user/(components)/position-table', Record<never, never>, Record<never, never>>,
    'user(components)user-table': RouteRecordInfo<'user(components)user-table', '/user/(components)/user-table', Record<never, never>, Record<never, never>>,
    'user-create': RouteRecordInfo<'user-create', '/user/create', Record<never, never>, Record<never, never>>,
    'user-update-id': RouteRecordInfo<'user-update-id', '/user/update/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
  }
}
